--- torsmo.c.orig	2004-09-15 18:27:29.836323176 +0300
+++ torsmo.c	2004-09-15 18:39:22.566415584 +0300
@@ -33,12 +33,15 @@
 
 /* default config file, undef if you don't want to use this at all */
 #define CONFIG_FILE "$HOME/.torsmorc"
-static char *current_config;
+char *current_config;
 
 /* mail spool */
 #define MAIL_FILE "$MAIL"
 static char *current_mail_spool;
 
+/* SETI@home paths */
+char *sah_path;
+
 /* set to 1 if you want all text to be in uppercase */
 static unsigned int stuff_in_upper_case = 0;
 
@@ -397,7 +400,7 @@
 void format_time_short(char *buf, unsigned int n, long t) {
   if(t >= 24*60*60)
     snprintf(buf, n, "%ldd %ldh", t/60/60/24,
-        (t/60/60) % 24);
+        (t/60/60) % 24);	
   else if(t >= 60*60)
     snprintf(buf, n, "%ldh %ldmin",
         (t/60/60) % 24,
@@ -406,6 +409,50 @@
     snprintf(buf, n, "%ldmin", t/60);
 }
 
+/* get seti@home packet count */
+static int get_sah_packets(void)
+{
+	if(!sah_path) return 1;
+	int packets=0;
+	FILE *fh;
+	fh = fopen(strcat(sah_path, "user_info.sah"), "r");
+	sah_path[strlen(sah_path)-13]='\0';
+	if(!fh) return 1;
+	while(!feof(fh))
+	{
+		char buf[32];
+		fgets(buf,32,fh);
+		if(strncmp("nresults", buf, 8) == 0)
+		{
+			packets = atoi(buf+9);
+		}
+	}
+	fclose(fh);
+	return packets;
+}
+
+/* get seti@home current package progress */
+static int get_sah_progress(void)
+{
+	if(!sah_path) return 1;
+	double progress=0;
+	FILE *fh;
+	fh = fopen(strcat(sah_path, "state.sah"), "r");
+	sah_path[strlen(sah_path)-9]='\0';
+	if(!fh) return 1;
+	while(!feof(fh))
+	{
+		char buf[17];
+		fgets(buf,17,fh);
+		if(strncmp("prog", buf, 4) == 0)
+		{
+			progress = atof(buf+5);
+			progress *= 100;
+		}
+	}
+	fclose(fh);
+	return (int)progress;
+}
 
 static struct utsname uname_s;
 
@@ -472,6 +519,8 @@
   OBJ_upspeedf,
   OBJ_uptime,
   OBJ_uptime_short,
+  OBJ_sah_packets,
+  OBJ_sah_progress,
 };
 
 struct text_object {
@@ -785,6 +834,10 @@
   END
   OBJ(uptime_short)
   END
+  OBJ(sah_progress)
+  END
+  OBJ(sah_packets)
+  END
   OBJ(uptime)
   END
   {
@@ -1212,6 +1265,12 @@
       double t = get_uptime();
       format_seconds(p, n, (int) t);
     }
+    OBJ(sah_packets) {
+	    snprintf(p, n, "%i", get_sah_packets());
+    }
+    OBJ(sah_progress) {
+	    snprintf(p, n, "%i", get_sah_progress());
+    }
     break;
     }
 
@@ -2151,6 +2210,12 @@
       fclose(fp);
       return;
     }
+    /* SETI@home path */
+    else if (strcasecmp(name, "sah_path") == 0) {
+	    if(sah_path) free(sah_path);
+	    sah_path = strdup(value);
+    }
+    /**/
     else
       ERR("%s: %d: no such configuration: '%s'", f, line, name);
   }
